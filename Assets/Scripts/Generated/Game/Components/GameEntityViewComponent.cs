//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Libs.OpenCore.Ecs.Common.Components.EntityViewComponent entityView { get { return (Libs.OpenCore.Ecs.Common.Components.EntityViewComponent)GetComponent(GameComponentsLookup.EntityView); } }
    public bool hasEntityView { get { return HasComponent(GameComponentsLookup.EntityView); } }

    public void AddEntityView(Libs.OpenCore.Ecs.IEntityView newValue) {
        var index = GameComponentsLookup.EntityView;
        var component = (Libs.OpenCore.Ecs.Common.Components.EntityViewComponent)CreateComponent(index, typeof(Libs.OpenCore.Ecs.Common.Components.EntityViewComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEntityView(Libs.OpenCore.Ecs.IEntityView newValue) {
        var index = GameComponentsLookup.EntityView;
        var component = (Libs.OpenCore.Ecs.Common.Components.EntityViewComponent)CreateComponent(index, typeof(Libs.OpenCore.Ecs.Common.Components.EntityViewComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEntityView() {
        RemoveComponent(GameComponentsLookup.EntityView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEntityView;

    public static Entitas.IMatcher<GameEntity> EntityView {
        get {
            if (_matcherEntityView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EntityView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEntityView = matcher;
            }

            return _matcherEntityView;
        }
    }
}
